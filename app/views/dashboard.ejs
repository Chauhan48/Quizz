<!DOCTYPE html>
<html>
<head>
  <title> Dashboard</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 30px 20px;
      background: linear-gradient(135deg, #f0f4f8 0%, #d9e6f2 100%);
      color: #2c3e50;
      margin: 0;
    }

    h1 {
      text-align: center;
      margin-bottom: 40px;
      color: #34495e;
      font-weight: 700;
      font-size: 2.4rem;
      letter-spacing: 1.2px;
    }

    .dashboard-container {
      max-width: 980px;
      margin: auto;
      background: #ffffff;
      padding: 40px 48px;
      border-radius: 12px;
      box-shadow: 0 12px 36px rgba(52, 73, 94, 0.12);
      border: 1px solid #e1e8f0;
    }

    .section {
      margin-bottom: 48px;
    }

    .level {
      font-size: 1.8rem;
      font-weight: 700;
      color: #27ae60;
      letter-spacing: 0.7px;
    }

    .chart-placeholder {
      height: 220px;
      background: #edeff3;
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #7f8c8d;
      font-style: italic;
      font-size: 1.15rem;
      user-select: none;
    }

    ul.weak-areas-list {
      list-style: none;
      padding-left: 0;
      display: flex;
      gap: 18px;
      flex-wrap: wrap;
      justify-content: center;
    }

    ul.weak-areas-list li {
      background-color: #e74c3c;
      color: white;
      padding: 10px 16px;
      font-weight: 700;
      border-radius: 25px;
      box-shadow: 0 4px 12px rgba(231, 76, 60, 0.2);
      font-size: 1rem;
      user-select: none;
    }

    #take-test-btn {
      display: block;
      margin: 0 auto 30px auto;
      padding: 16px 48px;
      background-color: #2980b9;
      color: white;
      font-size: 1.3rem;
      border: none;
      border-radius: 30px;
      cursor: pointer;
      font-weight: 700;
      box-shadow: 0 8px 20px rgba(41, 128, 185, 0.4);
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
      user-select: none;
      max-width: 280px;
      text-align: center;
    }

    #take-test-btn:hover {
      background-color: #1c5985;
      box-shadow: 0 12px 26px rgba(28, 89, 133, 0.6);
    }

    #test-options {
      display: none; /* initially hidden */
      text-align: center;
      margin-top: 20px;
    }

    #test-options button {
      margin: 0 14px;
      padding: 14px 26px;
      font-size: 1.1rem;
      cursor: pointer;
      border: 2px solid #2980b9;
      background-color: white;
      color: #2980b9;
      border-radius: 22px;
      font-weight: 600;
      box-shadow: 0 4px 12px rgba(41, 128, 185, 0.15);
      transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
      user-select: none;
    }

    #test-options button:hover {
      background-color: #2980b9;
      color: white;
      box-shadow: 0 8px 22px rgba(41, 128, 185, 0.4);
    }

    #quiz-container {
      display: none; /* hidden initially */
      margin-top: 38px;
      background: #fafafa;
      padding: 28px 32px;
      border-radius: 12px;
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.08);
    }

    #quiz-container h3 {
      margin-bottom: 25px;
      font-size: 1.8rem;
      font-weight: 700;
      color: #34495e;
      text-align: center;
    }

    .question-block {
      margin-bottom: 30px;
    }

    .question-block p {
      margin: 0 0 12px 0;
      font-weight: 700;
      font-size: 1.1rem;
      color: #2c3e50;
    }

    .option {
      margin-left: 26px;
      margin-bottom: 8px;
      font-size: 1rem;
      color: #34495e;
      user-select: none;
    }

    .option input {
      margin-right: 12px;
      cursor: pointer;
      accent-color: #2980b9;
    }
  </style>
</head>
<body>
  <% 
    level = typeof level !== 'undefined' ? level : 'Beginner'; 
    weakAreas = typeof weakAreas !== 'undefined' ? weakAreas : [];
  %>
  <div></div>

  <div class="dashboard-container">
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
      <h1 style="margin: 0;">Dashboard</h1>
      <div style="display: flex; align-items: center; gap: 15px;">
        <div style="text-align: right;">
          <div style="font-weight: bold; color: #333;">Welcome, <%= user.firstName %> <%= user.lastName %></div>
          <div style="font-size: 0.9em; color: #666;"><%= user.email %></div>
        </div>
        <button onclick="window.location.href='/user/profile'" style="padding: 8px 16px; background-color: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 0.9em;">Profile</button>
        <button onclick="logout()" style="padding: 8px 16px; background-color: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 0.9em;">Logout</button>
      </div>
    </div>

    <!-- Success/Error Messages -->
    <% if (typeof testCompleted !== 'undefined' && testCompleted) { %>
      <div style="background-color: #d4edda; color: #155724; padding: 15px; border-radius: 5px; margin-bottom: 20px; border: 1px solid #c3e6cb;">
        <strong>Test Completed!</strong> Your score: <strong><%= lastScore %>%</strong>
      </div>
    <% } %>
    
    <% if (typeof error !== 'undefined' && error) { %>
      <div style="background-color: #f8d7da; color: #721c24; padding: 15px; border-radius: 5px; margin-bottom: 20px; border: 1px solid #f5c6cb;">
        <strong>Error:</strong> <%= error %>
      </div>
    <% } %>

    <div class="section">
      <h2>Current Level</h2>
      <p class="level"><%= level %></p>
    </div>

    <div class="section">
      <h2>Score Trends</h2>
      <% if (scoreHistory && scoreHistory.length > 0) { %>
        <div id="score-chart-container" style="position: relative; height: 300px; width: 100%;">
          <canvas id="score-chart"></canvas>
        </div>
      <% } else { %>
        <div style="text-align: center; padding: 40px; color: #666; font-style: italic;">
          <p>No test scores yet. Take your first test to see your progress chart!</p>
        </div>
      <% } %>
    </div>

    <div class="section">
      <h2>Weak Areas</h2>
      <% if (weakAreas.length > 0) { %>
        <ul class="weak-areas-list">
          <% weakAreas.forEach(function(area) { %>
            <li><%= area %></li>
          <% }); %>
        </ul>
      <% } else { %>
        <p>No weak areas detected yet. Great job!</p>
      <% } %>
    </div>

    <button id="take-test-btn">Take Test</button>

    <div id="test-options">
      <button onclick="startTest('Easy')">Easy</button>
      <button onclick="startTest('Medium')">Medium</button>
      <button onclick="startTest('Hard')">Hard</button>
    </div>
  </div>

    <div id="quiz-container">
      <h3>Quiz: <span id="quiz-level"></span> Level</h3>
      <div id="questions-list"></div>
      <!-- Add submit button or quiz controls as needed -->
    </div>
  </div>

  <!-- Chart.js CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  
  <script>
    const takeTestBtn = document.getElementById('take-test-btn');
    const testOptions = document.getElementById('test-options');
    const quizContainer = document.getElementById('quiz-container');
    const quizLevelSpan = document.getElementById('quiz-level');
    const questionsList = document.getElementById('questions-list');

    takeTestBtn.addEventListener('click', () => {
      testOptions.style.display = 'block';
      takeTestBtn.style.display = 'none';
    });

    function startTest(level) {
      const ready = confirm('Test is going to start. Are you ready?');
      if (!ready) return;

      // Redirect to new test page with difficulty as URL param
      window.location.href = `/test/${level.toLowerCase()}`;
    }

    function logout() {
      if (confirm('Are you sure you want to logout?')) {
        // Clear auth cookie and redirect to login
        document.cookie = 'auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
        window.location.href = '/user/login';
      }
    }

    // Score Chart Implementation
    function initializeScoreChart() {
      const ctx = document.getElementById('score-chart').getContext('2d');
      
      // Get score history data from server
      const scoreHistory = <%- JSON.stringify(scoreHistory || []) %>;
      
      // Sort score history by date (oldest to newest) to ensure proper chronological order
      const sortedScores = scoreHistory.sort((a, b) => new Date(a.date) - new Date(b.date));
      
      // Extract labels (dates) and data (scores)
      const labels = sortedScores.map(entry => {
        const date = new Date(entry.date);
        return date.toLocaleDateString('en-US', { 
          month: 'short', 
          day: 'numeric' 
        });
      });
      
      const scores = sortedScores.map(entry => entry.score);
      
      // Create the chart
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: 'Test Score (%)',
            data: scores,
            borderColor: '#4CAF50',
            backgroundColor: 'rgba(76, 175, 80, 0.1)',
            borderWidth: 3,
            fill: true,
            tension: 0.4,
            pointBackgroundColor: '#4CAF50',
            pointBorderColor: '#fff',
            pointBorderWidth: 2,
            pointRadius: 6,
            pointHoverRadius: 8
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            title: {
              display: true,
              text: 'Your Test Performance Over Time',
              font: {
                size: 16,
                weight: 'bold'
              }
            },
            legend: {
              display: true,
              position: 'top'
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              max: 100,
              title: {
                display: true,
                text: 'Score (%)'
              },
              grid: {
                color: 'rgba(0,0,0,0.1)'
              }
            },
            x: {
              title: {
                display: true,
                text: 'Test Date'
              },
              grid: {
                color: 'rgba(0,0,0,0.1)'
              }
            }
          },
          interaction: {
            intersect: false,
            mode: 'index'
          },
          elements: {
            point: {
              hoverBackgroundColor: '#2E7D32'
            }
          }
        }
      });
    }

    // Initialize chart when page loads (only if there's score history)
    document.addEventListener('DOMContentLoaded', function() {
      const scoreHistory = <%- JSON.stringify(scoreHistory || []) %>;
      if (scoreHistory && scoreHistory.length > 0) {
        initializeScoreChart();
      }
    });

  </script>
</body>
</html>